// ---------------------------------------------------------------------
// brWeightsControllerCreateMenuItems.mel
//
// Creates menu items for the weights controller nodes in the default
// Maya deform menu.
//
// ---------------------------------------------------------------------

//
// Procedure Name:
//      mayaVersion
//
// Description:
//      Get the current Maya version.
//
// Input Arguments:
//      None
//
// Return Value:
//      float           The Maya version.
//
proc float mayaVersion()
{
    float $version = `about -apiVersion`;
    string $versionString = $version;
    float $div = pow(10.0, (size($versionString) - 4));
    $version /= $div;
    int $versionInt = $version * 10;
    $version = $versionInt / 10.0;
    return $version;
}


//
// Procedure Name:
//      brWeightsControllerContentPath
//
// Description:
//      Get the content path of the module which has been collected
//      during setup.
//
// Input Arguments:
//      None
//
// Return Value:
//      string          The content path.
//
global proc string brWeightsControllerContentPath()
{
    return `optionVar -query "brWeightsControllerContentPath"`;
}


//
// Procedure Name:
//      brWeightsControllerLoadPlugin
//
// Description:
//      Load the weights controller plugin based on the module path, the
//      operating system and the Maya version.
//
// Input Arguments:
//      type            The node type.
//
// Return Value:
//      int             True, if the plug-in with a compatible version
//                      is loaded.
//
global proc int brWeightsControllerLoadPlugin( string $type )
{
    string $version;

    if (`pluginInfo -query -loaded $type`)
    {
        string $version = `pluginInfo -query -version $type`;
        string $items[] = stringToStringArray($version, ".");
        int $major = $items[0];
        if ($major < 4)
            return 0;
    }
    else
    {
        string $pluginPath = brWeightsControllerContentPath() + "/plug-ins";
        string $os = `about -os`;
        string $ext;
        if ($os == "mac")
        {
            $os += "OS";
            $ext = ".bundle";
        }
        else if ($os == "linux64")
            $ext = ".so";
        else if ($os == "win64")
            $ext = ".mll";
        $pluginPath += "/" + $os + "/" + mayaVersion() + "/" + $type + $ext;

        loadPlugin $pluginPath;

        $pluginPath = `pluginInfo -query -path $type`;
        $version = `pluginInfo -query -version $type`;
        string $msg = $type + " " + $version + " loaded from " + $pluginPath;
        brWeightsControllerLog($msg);
    }

    return 1;
}


//
// Procedure Name:
//      brWeightsControllerAddMenuCommand
//
// Description:
//      Add the command to create the necessary menu items for the
//      weights server node to the post menu command which is attached
//      to the various deformer menus.
//
// Input Arguments:
//      None
//
// Return Value:
//      None
//
global proc brWeightsControllerAddMenuCommand()
{
    global string $gAnimationMenus[];
    global string $gNewModelingMenus[];
    global string $gRiggingMenus[];

    string $cmd;

    $cmd = `menu -query -postMenuCommand $gAnimationMenus[3]`;
    $cmd += "; brWeightsControllerCreateMenuItems " + $gAnimationMenus[3] + " 1;";
    $gAnimationMenus[3] = `menu -edit -postMenuCommand $cmd $gAnimationMenus[3]`;

    $cmd = `menu -query -postMenuCommand $gNewModelingMenus[6]`;
    $cmd += "; brWeightsControllerCreateMenuItems " + $gNewModelingMenus[6] + " 2;";
    $gNewModelingMenus[6] = `menu -edit -postMenuCommand $cmd $gNewModelingMenus[6]`;

    $cmd = `menu -query -postMenuCommand $gRiggingMenus[2]`;
    $cmd += "; brWeightsControllerCreateMenuItems " + $gRiggingMenus[2] + " 3;";
    $gRiggingMenus[2] = `menu -edit -postMenuCommand $cmd $gRiggingMenus[2]`;
}


//
// Procedure Name:
//      addMenuItems
//
// Description:
//      Add the weights server menu items.
//
// Input Arguments:
//      None
//
// Return Value:
//      None
//
proc addMenuItems( int $menuIndex )
{
    string $ann = "Control deformer weights";

    menuItem -label "Edit Ramp Weights"
             -annotation $ann
             -image "rampWeights.svg"
             -command "brEditWeightsController rampWeights"
             ("brRampWeightsEditorMenuItem" + $menuIndex);

    menuItem -label "Edit Weights Server"
             -annotation $ann
             -image "weightsServer.svg"
             -command "brEditWeightsController weightsServer"
             ("brWeightsServerEditorMenuItem" + $menuIndex);
}


//
// Procedure Name:
//      brWeightsControllerCreateMenuItems
//
// Description:
//      Load the weights server plugin and add the menu items.
//      This procedure gets called when opening one of the deformer
//      menus.
//
// Input Arguments:
//      parent          The name of the parent menu.
//
// Return Value:
//      None
//
global proc brWeightsControllerCreateMenuItems( string $parent, int $menuIndex )
{
    source brWeightsControllerCommon;
    source brEditRampWeights;
    source brEditWeightsServer;

    if (`menuItem -query -exists ("brWeightsControllerMenuDivider" + $menuIndex)`)
        return;

    setParent -menu $parent;

    string $div = "-dividerLabel \"Weights Controller\" ";
    eval("menuItem -divider 1 " + $div + "brWeightsControllerMenuDivider" + $menuIndex);

    addMenuItems($menuIndex);
}

// ---------------------------------------------------------------------
// MIT License
//
// Copyright (c) 2019 Ingo Clemens, brave rabbit
// rampWeights and weightsServer are under the terms of the MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Author: Ingo Clemens    www.braverabbit.com
// ---------------------------------------------------------------------
